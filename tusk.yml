interpreter: bash -c
name: tok8
usage: conveniences and ergonomics for tokenator

options:
  clientid:
    short: i
    default: iona-1
  secret:
    short: s
    default: iona-1-password

  stsurl:
    short: u
    default: https://sts.iona.thaumagen.io/token

  nodeurl:
    short: "n"
    default: https://iona.thaumagen.io/node/ethnode0

  token:
    short: t

  verbose:
    type: bool
    default: false
    short: v

  tuskdir:
    private: true
    usage: "so all tasks can refer to the directory containing this tusk file"
    default:
      command: echo $(pwd)

tasks:

  blockheight:
    usage: get block height using exchanged token
    run:
      - command:
          exec: |
            set -x

            TOKEN=${token}
            if [ "${TOKEN}" == "" ]; then
              TOKEN=$(cat .token)
            fi
            echo $TOKEN

            curl -v -k \
              --data '{"jsonrpc": "2.0","method": "eth_blockNumber","params": [],"id": 0}' \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${TOKEN}" \
              ${nodeurl}


  localhost-blockheight:
    usage: |
      get block height using exchanged token obtained (localhost token exchange)

      this method by passes traefik forwardauth and authex and can be used to
      check the node configuration.
    run:
      - command:
          exec: |

            TOKEN=${token}
            if [ "${TOKEN}" == "" ]; then
              TOKEN=$(cat .token)
            fi
            echo $TOKEN

            NODEURL=https://127.0.0.1:8300
            STSURL=http://localhost:3000/token

            TOKEN=$(tusk -qf ${tuskdir}/tusk.yml stx -t ${TOKEN} -u ${STSURL})
            curl -v -k \
              --data '{"jsonrpc": "2.0","method": "eth_blockNumber","params": [],"id": 0}' \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${TOKEN}" \
              -X POST \
              ${NODEURL}


  stx:
    usage: do a secure token exchange
    run:
      - command:
          exec: |
            set -e
            TOKEN=${token}
            if [ "${TOKEN}" == "" ]; then
              TOKEN=$(cat .token)
            fi

            EXCHANGED=$(curl -X POST \
              -H 'content-type: application/x-www-form-urlencoded' \
              -H 'x-forwarded-proto: https' \
              --url "${stsurl}" \
              --data-urlencode "client_id=${clientid}" \
              --data-urlencode "client_secret=${secret}" \
              --data-urlencode "grant_type=urn:ietf:params:oauth:grant-type:token-exchange" \
              --data-urlencode "scope=rpc://admin_nodeInfo rpc://eth_blockNumber rpc://eth_* rpc://rpc_modules" \
              --data-urlencode "subject_token=${TOKEN}" \
              --data-urlencode "subject_token_type=urn:ietf:params:oauth:token-type:id_token" \
              --data-urlencode "audience=ethnode0" \
              --data-urlencode "resource=https://iona.thaumagen.com/node/ethnode0" 2>/dev/null)
            ${verbose} && echo $EXCHANGED
            echo $EXCHANGED | jq -r .access_token


  client-credentials:
    usage: |
    run:
      - command: |
          echo ": ${clientid} ${secret} ${stsurl}"
          curl -X POST \
            -H 'content-type: application/x-www-form-urlencoded' \
            -H 'x-forwarded-proto: https' \
            --url "${stsurl}" \
            --data-urlencode 'grant_type=client_credentials' \
            --data-urlencode "client_id=${clientid}" \
            --data-urlencode "client_secret=${secret}"
