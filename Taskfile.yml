---
version: '3'
silent: true

env:
  CONTEXT: iona-1
  CLUSTER: gke_iona-1_europe-west2-a_kluster
  KUBECTL: kubectl --context {{.CONTEXT}} --cluster {{.CLUSTER}}
  KUSTOMIZE: kustomize
  CLUSTER_NAMESPACE: iona
  NAMESPACE: '{{.NAMESPACE | default .CLUSTER_NAMESPACE}}'
  APPNAME: '{{.APPNAME | default "authex"}}'
  PYENV: '{{.PYENV | default "env"}}'
  SKAFFOLD_DEFAULT_REPO: '{{.SKAFFOLD_DEFAULT_REPO | default "eu.gcr.io/iona-1"}}'
  PROFILE: '{{.PROFILE | default "local"}}'
  TAG: '{{.TAG | default "iona-latest"}}'
  PORT: '{{.PORT | default "8401"}}'
  HOST: '{{.HOST | default "http://127.0.0.1:8401"}}'
  TOKEN: '{{.TOKEN | default "xxxinvalidxxx"}}'

dotenv: [".env", '{{.ENV}}/.env', '{{.HOME}}/.env']

tasks:

  bootstrap-debian:
    desc: |
      install tooling on debain like systems. for other platforms run `task
      bootstrap-debian --sumarize` and use the results to find the right bits.
    cmds:
      - |
        python3 -m venv ${PYENV}
        ${PYENV}/bin/pip3 install -r requirements.txt


  generate:
    desc: 'generate secrets and so on'
    cmds:
      - |
        ${PYENV}/bin/josekeys jwk \
          -t EC -a ES256 -c P-256 -u sig > k8s/iona/provider-signing-key.json
    generates:
      - k8s/iona/provider-signing-key.json

  build:
    desc: 'build the images'
    cmds:
      - |
        skaffold build ${PROFILE:+-p $PROFILE} ${TAG:+-t $TAG}

  skaffold-deploy:
    desc: 'build and deploy the images'
    env:
      PROFILE: '{{.PROFILE | default "push"}}'
    cmds:
      - |
        skaffold build -q ${PROFILE:+-p $PROFILE} ${TAG:+-t $TAG} | skaffold deploy --build-artifacts -

  up:
    desc: 'deploy the k8s manifests'
    cmds:
      - |
        $KUSTOMIZE build k8s/iona | $KUBECTL apply -f -
  down:
    desc: 'deploy the k8s manifests'
    cmds:
      - |
        $KUSTOMIZE build k8s/iona | kubectl delete -f -

  discodoc:
    desc: fetch .well-known/openid-configuration
    cmds:
      - |
        curl -s http://localhost:3000/.well-known/openid-configuration | jq -r
        # curl -s ${URL}/.well-known/openid-configuration
