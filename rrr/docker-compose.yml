version: "3.8"
# This compose file supports running a prebuild image, running via go run from
# mounted sources, and running under dlv for host debugging. Network discovery
# is enabled (and restricted to a CIDR), the first compose node is the
# bootnode
#
# The debug service exists to build the image that is used to host the go tool
# chain for go run and dlv modes. It only needs to be built if the base go lang
# version is updated or delve needs to be upgraded.
#
# An .env file which sets the following variables MUST be in place
# - GETH_IMAGE: image name for the geth node (must be go-ethereum/go-quorum
#   compatible image layout and binary names etc)
# - NODESDIR path to a directory containing node[n] data directories
#   for geth
# - NETRESTRICT: (set to 172.19.0.10/24 or something compatible with your hosts networking)
# - ETHERBASE:  any wallet address
# - BOOTNODE0_PUB: must be the public key of the node0
#
# An .env file which sets the following variables MAY be in place
# - QUORUM_SRC path to rrr's quorum fork top directory 'go-etherum'. Required
#   only if node is using node-gorun or node-debug (rather than node-default)
# - DELVE_IMAGE: image name for a go lang image with the delve debugger installed
#   Required only for the node-gorun or node-debug configurations

# If any are set to node-gorun or node-debug, it must be set.
x-node-env-defaults: &node-env-defaults
  NETWORKID: "${NETWORKID}"
  PRIVATE_CONFIG: ignore
  RRR_OPTS: "${CONSENSUS_OPTS}"
  # DISCOVERY_OPTS: "--nodiscover"
  NAT_OPTS: "--nat=none"
  DISCOVERY_OPTS: "--netrestrict=${NETRESTRICT} --bootnodes=enode://${BOOTNODE0_PUB}@node0:7200"
  P2P_PORT: 7200
  RPC_OPTS: "--allow-insecure-unlock --http --http.addr 0.0.0.0 --http.port 8300 --http.corsdomain '*' --http.vhosts '*'"
  WS_OPTS: "--ws --wsport 8400 --wsorigins '*'"
  GAS_OPTS: "${GAS_OPTS}"
  MINER_OPTS: "--mine --miner.threads 1 --miner.etherbase ${ETHERBASE}"
  LOG_OPTS: "--vmodule consensus/*=5,miner/*=7,eth/*=2,p2p/*=3 --verbosity 3"
  # --debug adds source and line no
  # LOG_OPTS: "--debug --vmodule consensus/*=7,miner/*=5 --verbosity 3"

  # Different default ways to start geth
  LAUNCH_DIR: "/"
  RUN_GETH_CMD: geth
# env for debuging from the host via dlv
x-node-env-debug: &node-env-debug
  <<: *node-env-defaults
  GOCACHE: /tmp/go-cache
  LAUNCH_DIR: "/go/src/quorum"
  RUN_GETH_CMD: "/dbg/dlv debug --only-same-user=false --headless --listen=:2345 --api-version=2 github.com/ethereum/go-ethereum/cmd/geth -- "
# env for running from host sources (rather than building the image) - faster
# turnaround for very small networks, but more than 4 or 5 nodes takes a long
# time to startup.
x-node-env-gorun: &node-env-gorun
  <<: *node-env-defaults
  GOCACHE: /tmp/go-cache
  LAUNCH_DIR: "/go/src/quorum"
  RUN_GETH_CMD: go run github.com/ethereum/go-ethereum/cmd/geth
x-node-base: &node-base
  volumes:
    # Defined in the .env file
    - ${NODESDIR}:/nodes
  entrypoint:
    - /bin/sh
    - -cx
    - |

      NODE_DIR=$$(pwd)
      export SECURITY_CONFIG=$${NODE_DIR}/tokenator-config.json
      cd $${LAUNCH_DIR}
      # The RUN_GETH_CMD variable is set by the environment of each of the
      # supported x-node-{flavour}'s, the others all come from node-env-defaults
      # It is assumed that the service entry sets the working_dir to the
      # correct node directory for the --nodek
      # y and --datadir options
      # JSON-API Token Auth requires the --plugins and you MUST
      # set --identity=<the aud claim for your tokens>
      $${RUN_GETH_CMD} \
          $${RRR_OPTS} $${GAS_OPTS} \
          --identity ethnode0 \
          --networkid $${NETWORKID} \
          $${NAT_OPTS} $${DISCOVERY_OPTS} \
          --port $${P2P_PORT} \
          --nodekey $${NODE_DIR}/key \
          --datadir $${NODE_DIR}/data \
          --gcmode archive  --syncmode full \
          --nousb \
          --rpcapi "rrr,admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum" \
          $${MINER_OPTS} \
          $${RPC_OPTS} \
          $${LOG_OPTS} \
          --plugins file://$${NODE_DIR}/plugins.json

x-node-defaults: &node-defaults
  <<: *node-base
  environment:
    <<: *node-env-defaults
  image: ${GETH_IMAGE}
  volumes:
    # Defined in the .env file
    - ${NODESDIR}:/nodes
  networks:
    rrr:
x-node-debug: &node-debug
  <<: *node-base
  environment:
    <<: *node-env-debug
  image: ${DELVE_IMAGE}
  volumes:
    - go-cache-volume:/tmp/go-cache
    - go-pkg-volume:/go/pkg
    # These variables are defined in the .env file
    - ${QUORUM_SRC}:/go/src/quorum
    - ${NODESDIR}:/nodes
  ports:
    - "2345:2345"
    - "8545:8300"
  networks:
    rrr:
x-node-gorun: &node-gorun
  <<: *node-base
  environment:
    <<: *node-env-gorun
  image: ${DELVE_IMAGE}
  volumes:
    - go-cache-volume:/tmp/go-cache
    - go-pkg-volume:/go/pkg
    # These variables are defined in the .env file
    - ${QUORUM_SRC}:/go/src/quorum
    - ${RRR_SRC}:/go/src/go-rrr
    - ${NODESDIR}:/nodes
  # ports from node-base
networks:
  rrr:
    internal: false
    ipam:
      config:
        - subnet: ${NETRESTRICT}
services:
  # * One of the nodes can be set to << : *node-debug, to be debuged via a
  #   delve connection from the host, but the others must all be node-default or
  #   node-gorun
  # * Any can be set to << : *node-gorun, but more than 3 or 4 set that way
  #   significantly slow down startup.
  #   node-defaults assumes the image referenced by x-node-defaults has been
  #   built.
  node0:
    <<: *node-defaults
    working_dir: /nodes/node0
    ports:
      - "8300:8300"
  node1:
    <<: *node-defaults
    working_dir: /nodes/node1
    ports:
      - "8301:8300"
  node2:
    <<: *node-defaults
    working_dir: /nodes/node2
    ports:
      - "8302:8300"
  node3:
    <<: *node-defaults
    working_dir: /nodes/node3
    ports:
      - "8303:8300"
  node4:
    <<: *node-defaults
    working_dir: /nodes/node4
    ports:
      - "8304:8300"
volumes:
  go-pkg-volume:
  go-cache-volume:
